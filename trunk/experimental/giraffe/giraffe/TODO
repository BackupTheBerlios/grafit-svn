- disallow objects with the same name in the same folder
- automatically create names for new items
* disable undo/redo buttons when nesessary
* make worksheetview Enter behave properly
* create actionlist window

The core grafit application should _not_ use wx directly
but only the grafit.gui toolkit.
grafit.gui contains all the calls to the toolkit (wx, qt, whatever), so:
    - y

grafit.gui provides 
-------------------

- the basic controls:
    - Button
    - List
    - Combo
    - Label
    - Entry

- layout containers:
    - Box
    - Grid

- main window and panels
    - Window
    - MainWindow

- specific widgets for grafit
    - GraphWidget (standard OpenGL widget)
    - WorksheetWidget (standard grid/table widget)
    - Shell (python shell)

Window
------

w = Window()
w.menubar = MenuBar()

m = Menu()
m.append('file-new', '&New')
m.append('file-open', '&Open')

actions = { 
    'file-new': gui.Action('&New', 'New', 'Create a new project', self.on_new_project),
    'file-open': gui.Action('&Open', 'Open', 'Open a project', self.on_open_project),
    }

filemenu = [['file-new', '&New', 'Ctrl+N'],
            ['file-open', '&Open', 'Ctrl+O'],
            ['file-save', '&Save', 'Ctrl+S'],
            ['file-saveas', '&Save as...'],
            ['check-item?', 'check'],
            None,
            ['file-quit', '&Quit', 'Ctrl+Q'],
           ]
m = Menu(filemenu)

w.menubar.append('')
